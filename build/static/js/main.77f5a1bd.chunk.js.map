{"version":3,"sources":["components/Card1.js","components/util.js","components/Map.js","components/Table.js","App.js","index.js"],"names":["Card1","props","className","title","cases","total","ColorType","hex","multiplier","recovered","deaths","ShowDataOnMap","data","casesType","map","country","Circle","center","countryInfo","lat","long","fillOpacity","color","radius","Math","sqrt","Popup","style","backgroundImage","flag","sortTabled","sortedTabled","sort","a","b","Map","countries","zoom","MapContainer","TileLayer","url","attribution","Table","AOS","init","App","useState","setcountries","setCountry","setCountryInfo","tabledata","setTableData","lng","mapcenter","setMapcenter","mapzoom","setmapzoom","mapcountries","setmapcountries","useEffect","fetch","then","response","json","res","name","value","iso2","getCountry","onCountryChange","e","countryCode","target","continent","FormControl","Select","variant","onChange","MenuItem","fontWeight","letterSpacing","backgroundColor","data-aos","todayCases","todayRecovered","todayDeaths","Card","CardContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77f5a1bd.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./card.css\"\r\n\r\nconst Card1 = (props) => {\r\n    return (\r\n        <div className=\"card__header\">\r\n            <h1>{props.title}</h1>\r\n            <h3>Today's - {props.cases} </h3>\r\n            <h3>Total - {props.total}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card1;\r\n","// DRAW CIRCLE\r\n// TOOLTIP\r\nimport React from \"react\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\nimport \"./util.css\";\r\n\r\n// Colors selection if you want to make it more attractive\r\nconst ColorType = {\r\n    cases:{\r\n        hex: \"#CC1034\",   \r\n        multiplier: 800,\r\n    },\r\n    recovered:{\r\n        hex: \"#7dd71d\",\r\n        multiplier: 1200,\r\n    },\r\n    deaths:{\r\n        hex: \"#fb4443\",\r\n        multiplier: 2000,\r\n    },\r\n}; \r\n\r\n// Show circle\r\nexport const ShowDataOnMap = (data, casesType = 'cases') =>(\r\n    data.map(country =>(\r\n        <Circle\r\n        center = {[country.countryInfo.lat, country.countryInfo.long]}\r\n        fillOpacity={0.4}\r\n        color='#3c00ad'\r\n        // Radius Fucntion is not enabled for now because of some Issue\r\n        radius={\r\n            Math.sqrt(country[casesType])* ColorType[casesType].multiplier\r\n        }>\r\n        <Popup className=\"util__popup\">\r\n        <div className=\"util__container\">\r\n            <div className=\"util__image\" style={{ backgroundImage: `url(${country.countryInfo.flag})` }} />\r\n            <div className=\"util__name\">{country.country}</div>\r\n            <div className=\"util__cases\">Cases - {country.cases}</div>\r\n            <div className=\"util__recovery\">Recovered - {country.recovered}</div>\r\n            <div className=\"util__deaths\">Deaths - {country.deaths}</div>\r\n        </div>\r\n        </Popup>\r\n        </Circle>\r\n    ))\r\n);\r\n\r\n\r\n// SORT TABLE \r\nexport const sortTabled = (data) =>{\r\n    let sortedTabled = [...data];\r\n    sortedTabled.sort((a,b) =>{\r\n    if(a.cases > b.cases){ \r\n        return -1;\r\n    }\r\n    else{\r\n        return 1;\r\n    }});\r\nreturn sortedTabled;\r\n}; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport \"./map.css\"\r\nimport { ShowDataOnMap } from \"./util\"\r\n\r\nconst Map = ({countries, casesType, center, zoom}) => {\r\n    return (\r\n        <div className=\"map__head\">\r\n        <MapContainer center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>\r\n          contributors'\r\n        />\r\n        { ShowDataOnMap(countries, casesType) } \r\n        </MapContainer>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react'\r\nimport \"./table.css\"\r\n\r\nconst Table = ({countries}) => {\r\n    return (\r\n        <div className=\"table__head\">\r\n            {countries.map(country =>(\r\n                <tr className=\"table__headpart\">\r\n                <td>{country.country}</td>\r\n                <td>{country.cases}</td>\r\n                </tr> \r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { FormControl, Select,MenuItem, CardContent, Card } from \"@material-ui/core\";\nimport Card1 from \"./components/Card1\";\nimport Map from \"./components/Map\";\nimport Table from \"./components/Table\";\nimport \"leaflet/dist/leaflet.css\";\nimport { sortTabled } from \"./components/util\"\nimport AOS from 'aos';\nimport 'aos/dist/aos.css'; \n\nAOS.init();\n\nconst App = () => {\n  const [ countries, setcountries ] = useState([])\n  const [ country, setCountry ] = useState('worldwide')\n  const [ countryInfo, setCountryInfo ] = useState({}) \n  const [ tabledata, setTableData ] = useState([]) \n  const [ mapcenter, setMapcenter ] = useState({lat:27.2046, lng:77.4977});\n  const [ mapzoom, setmapzoom ] = useState(3);\n  const [ mapcountries, setmapcountries ] = useState([]);\n\n useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() =>{\n        const getCountry = async () =>{\n          await fetch(\"https://disease.sh/v3/covid-19/countries\")\n          .then((res) => res.json())\n          .then((data) =>{\n               const countries = data.map((country) => (\n                 {\n                   name: country.country,\n                   value: country.countryInfo.iso2\n                 }\n               ));\n               setcountries(countries);\n              //  FOR TABLE \n              const sortedTabled = sortTabled(data);\n              setTableData(sortedTabled);\n              setmapcountries(data);\n          })}\n          getCountry();\n  }, [])\n\n\n\n\n\n  const onCountryChange = async(e) => {\n    const countryCode = e.target.value;\n    setCountry(countryCode);\n    const url = (countryCode === 'worldwide')\n      ? 'https://disease.sh/v3/covid-19/all'\n      : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n     await fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setCountry(countryCode);\n        // All data at once \n        setCountryInfo(data);\n        // Latitude and Longitude\n        setMapcenter([data.countryInfo.lat, data.countryInfo.long]);\n        // Zoom\n        setmapzoom(4);\n      });\n  }\n\n\n\n  return (\n    <div className=\"app\">\n\n{/* --------------------------------------------------- */}\n\n{/* Left Part  */}\n<div className=\"left__side\">\n    <div className=\"first__row\">\n      <h1 className=\"first__heading\">Covid Tracker</h1>\n      <h1 className=\"continent__name__decor\">{countryInfo.continent}</h1>  \n      <div className=\"first__dropdown\">\n      <FormControl className=\"app__dropdown\">\n      \n       <Select className=\"app__ul\" \n       variant = \"outlined\" \n       onChange={onCountryChange}\n       value={country}\n       >\n      \n       <MenuItem value=\"worldwide\">\n       <p style=\n       {{ color:'white', \n       fontWeight:800,\n       letterSpacing:'1px' \n        }} \n        className=\"header__menuitem\"\n        value={country.value}\n        >\n        Worldwide</p>\n       </MenuItem>\n       {\n         countries.map((country) => (\n           <MenuItem style={{ color:'white', \n           backgroundColor: '#00162c',\n           fontWeight:800,\n           letterSpacing:'1px' \n        }} value={country.value}>\n        <p className=\"header__menuitem\">{country.name}</p></MenuItem>\n         ))\n       }\n       </Select>  \n      </FormControl>  \n      </div>\n    </div>\n\n{/* --------------------------------------------------- */}\n  <div className=\"second__row\"> \n    <div data-aos=\"zoom-out-down\" className=\"app__cards\">  \n      <Card1 \n        title = \"Corona\"\n        cases = {countryInfo.todayCases}\n        total = {countryInfo.cases}\n      />\n      <Card1\n        title = \"Recovered\"\n        cases = {countryInfo.todayRecovered}\n        total = {countryInfo.recovered}\n      />\n      <Card1 \n        title = \"Deaths\"\n        cases = {countryInfo.todayDeaths} \n        total = {countryInfo.deaths}\n      /> \n    </div>\n  </div>\n\n{/* --------------------------------------------------- */}\n\n<div className=\"third__row\">\n<div className=\"map\">\n<h1 className=\"first__heading\">Map Graphics</h1>\n<Map\ncountries={mapcountries}\ncenter = {mapcenter}\nzoom = {mapzoom}\n />\n</div>\n</div>\n</div>\n\n{/* --------------------------------------------------- */}\n\n{/* Right Part */}\n<div className=\"right__side\">\n    <Card data-aos=\"zoom-out-down\">\n    <CardContent className=\"table\">\n    <h1>Live Cases by Country Worldwide</h1>\n    <Table countries={tabledata} />\n    </CardContent>\n    </Card>\n</div>\n</div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}